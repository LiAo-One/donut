#﻿设置Tomcat端口，默认8080
#server.port=${port:8080}
server.port=8080
#设置项目ContextPath
server.servlet.context-path=/donut

server.address = 0.0.0.0
#设置Tomcat编码
server.tomcat.uri-encoding=UTF-8
#设置视图解析器路径# 配置jsp文件的位置，默认位置为：src/main/webapp
spring.mvc.view.prefix=/
# 配置jsp文件的后缀
spring.mvc.view.suffix=.html
#session失效时间
server.servlet.session.timeout=18000
#表明使用Druid连接池
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.type=com.
#实体类位置
mybatis.type-aliases-package=com.liao.entity
# xml位置
mybatis.mapper-locations=classpath:mapper/*Mapper.xml
#数据库连接串
spring.datasource.url=jdbc:mysql://localhost:3306/donut?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT
#数据库用户名
spring.datasource.username=root
#数据库密码
spring.datasource.password=liao

#Druid连接池配置
#初始化时建立物理连接的个数。
spring.datasource.druid.initial-size=5
#最大连接池数量
spring.datasource.druid.max-active=20
#最小连接池数量
spring.datasource.druid.min-idle=5
#获取连接时最大等待时间，单位毫秒
spring.datasource.druid.max-wait=3000
#是否缓存preparedStatement，也就是PSCache,PSCache对支持游标的数据库性能提升巨大，比如说oracle,在mysql下建议关闭。
spring.datasource.druid.pool-prepared-statements=false
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
spring.datasource.druid.max-open-prepared-statements= -1
#配置检测可以关闭的空闲连接间隔时间
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置连接在池中的最小生存时间
spring.datasource.druid.min-evictable-idle-time-millis= 300000
spring.datasource.druid.max-evictable-idle-time-millis= 400000

#监控统计的stat,以及防sql注入的wall
spring.datasource.druid.filters= stat,wall
#Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
spring.datasource.druid.aop-patterns= com.web.springbootdruid.service.*
#是否启用StatFilter默认值true
spring.datasource.druid.web-stat-filter.enabled= true
#添加过滤规则
spring.datasource.druid.web-stat-filter.url-pattern=/*
#忽略过滤的格式
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*

#是否启用StatViewServlet默认值true
spring.datasource.druid.stat-view-servlet.enabled= true
#访问路径为/druid时，跳转到StatViewServlet
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
# 是否能够重置数据
spring.datasource.druid.stat-view-servlet.reset-enable=false
# 需要账号密码才能访问控制台，默认为root
spring.datasource.druid.stat-view-servlet.login-username=druid
spring.datasource.druid.stat-view-servlet.login-password=druid
#IP白名单
spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
#&emsp;IP黑名单（共同存在时，deny优先于allow）
#spring.datasource.druid.stat-view-servlet.deny=

# Driver 连接池
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
##Driver连接池配置
#spring.datasource.max-idle=10
#spring.datasource.max-wait=10000
#spring.datasource.min-idle=5
#spring.datasource.initial-size=5
#spring.datasource.validation-query=SELECT 1
#spring.datasource.test-on-borrow=false
#spring.datasource.test-while-idle=true
#spring.datasource.time-between-eviction-runs-millis=18800
#spring.datasource.jdbc-interceptors=ConnectionState;SlowQueryReport(threshold=0)
#打印sql（改 logging.level.（Mapper.java所在包））
logging.level.com.liao.dao=DEBUG


#配置.xml文件路径
mybatis.config-locations=classpath:mybatis-config.xml

#设置自动的属性与列的转换
mybatis.configuration.mapUnderscoreToCamelCase=true
#或
#mybatis.configuration.map-underscore-to-camel-case=true
# 开启 multipart 上传功能
spring.servlet.multipart.enabled=true
# 文件写入磁盘的阈值
spring.servlet.multipart.file-size-threshold=2KB
# 最大文件大小
spring.servlet.multipart.max-file-size=20MB
# 最大请求大小
spring.servlet.multipart.max-request-size=20MB
## 文件存储所需参数
# 所有通过 REST APIs 上传的文件都将存储在此目录下
file.upload-dir=src/main/resources/static/uploads
#热部署生效
spring.devtools.restart.enabled=true
#设置重启的目录，检索目录(resources/static、resources/templates)
spring.devtools.restart.additional-paths= src/main/java
#classpath目录下的WEB-INF文件夹内容修改不重启
#spring.devtools.restart.exclude= WEB-INF/**
logging.level.com.carry=DEBUG
# 驼峰命名规范 如：数据库字段是  order_id 那么 实体字段就要写成 orderId
mybatis.configuration.map-underscore-to-camel-case=true
######### 通用Mapper ##########
# 主键自增回写方法,默认值MYSQL,详细说明请看文档
mapper.identity=MYSQL
mapper.mappers=tk.mybatis.mapper.common.Mapper
# 设置 insert 和 update 中，是否判断字符串类型!=''
mapper.not-empty=true
# 枚举按简单类型处理
mapper.enum-as-simple-type=true
######### 分页插件 ##########
pagehelper.helper-dialect=mysql
pagehelper.params=count=countSql
pagehelper.reasonable=false
pagehelper.support-methods-arguments=true
######### 打印SQL日志 ##########
ogging.level.com.example.demo.dao=debug
#统一日志处理
spring.aop.auto=true
#设置应用的日志级别
logging.level.com.glmapper.spring.boot=INFO
#路径
logging.path=./logs

#邮件配置
#邮箱服务地址
spring.mail.host=smtp.qq.com
#邮箱账号
spring.mail.username=2272963013@qq.com
#第三方授权码
spring.mail.password=wuivwfwhnitoebci
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# SSL Config
spring.mail.port=465
spring.mail.protocol=smtp
spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory

#rabbitMQ配置
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=liao   
spring.rabbitmq.password=liao
spring.rabbitmq.listener.concurrency=10
spring.rabbitmq.listener.max-concurrency=20
spring.rabbitmq.listener.prefetch=5
spring.rabbitmq.virtual-host= JCcccHost

#mq.evn = local
#
#log.user.queue.name=${mq.evn}.log.user.queue
#log.user.exchange.name=${mq.evn}.log.user.exchange
#log.user.routing.key.name=${mq.evn}.log.user.routing.key

#rabbitmqctl set_user_tags liao administrator

# Ehcache缓存
#spring.cache.type=ehcache
#spring.cache.ehcache.config=classpath:/ehcache.xml




